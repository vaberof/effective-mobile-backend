{
    "swagger": "2.0",
    "info": {
        "description": "API Server for Car Catalog Application",
        "title": "Car Catalog API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/cars": {
            "get": {
                "description": "List cars by filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "List cars",
                "operationId": "list-cars",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "An optional query parameter 'limit' that limits total number of returned cars. By default 'limit' = 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "An optional query parameter 'offset' that indicates how many records should be skipped while listing cars. By default 'offset' = 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "An optional query parameter 'regNum'",
                        "name": "regNum",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "An optional query parameter 'mark'",
                        "name": "mark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "An optional query parameter 'model'",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "An optional query parameter 'year'",
                        "name": "year",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app_entrypoint_http.listCarsResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cars",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Create a new cars",
                "operationId": "create-cars",
                "parameters": [
                    {
                        "description": "Payload with array of car registration numbers that needs to be created",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_app_entrypoint_http.createCarsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app_entrypoint_http.createCarsResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    }
                }
            }
        },
        "/cars/{id}": {
            "delete": {
                "description": "Delete a car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Delete a car",
                "operationId": "delete-car",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cars`s id that needs to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app_entrypoint_http.deleteCarResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Update a car",
                "operationId": "update-cars",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car`s id that needs to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Car object that needs to be updated",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_app_entrypoint_http.updateCarRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app_entrypoint_http.updateCarResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_vaberof_effective-mobile-backend_pkg_http_protocols_apiv1.Response": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_app_entrypoint_http.carOwnerPayload": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "internal_app_entrypoint_http.carPayload": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mark": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/internal_app_entrypoint_http.carOwnerPayload"
                },
                "regNum": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "internal_app_entrypoint_http.createCarsRequestBody": {
            "type": "object",
            "properties": {
                "regNums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_app_entrypoint_http.createCarsResponseBody": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_app_entrypoint_http.deleteCarResponseBody": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_app_entrypoint_http.listCarsResponseBody": {
            "type": "object",
            "properties": {
                "cars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_app_entrypoint_http.carPayload"
                    }
                }
            }
        },
        "internal_app_entrypoint_http.updateCarOwnerPayload": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "internal_app_entrypoint_http.updateCarRequestBody": {
            "type": "object",
            "properties": {
                "mark": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/internal_app_entrypoint_http.updateCarOwnerPayload"
                },
                "regNum": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "internal_app_entrypoint_http.updateCarResponseBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mark": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/internal_app_entrypoint_http.carOwnerPayload"
                },
                "regNum": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        }
    }
}
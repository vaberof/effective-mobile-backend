// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/car/car_api_service.go
//
// Generated by this command:
//
//	mockgen -source=internal/domain/car/car_api_service.go -destination=internal/domain/car/mocks/mock_car_api_service.go
//

// Package mock_car is a generated GoMock package.
package mock_car

import (
	reflect "reflect"

	car "github.com/vaberof/effective-mobile-backend/internal/domain/car"
	gomock "go.uber.org/mock/gomock"
)

// MockCarApiService is a mock of CarApiService interface.
type MockCarApiService struct {
	ctrl     *gomock.Controller
	recorder *MockCarApiServiceMockRecorder
}

// MockCarApiServiceMockRecorder is the mock recorder for MockCarApiService.
type MockCarApiServiceMockRecorder struct {
	mock *MockCarApiService
}

// NewMockCarApiService creates a new mock instance.
func NewMockCarApiService(ctrl *gomock.Controller) *MockCarApiService {
	mock := &MockCarApiService{ctrl: ctrl}
	mock.recorder = &MockCarApiServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCarApiService) EXPECT() *MockCarApiServiceMockRecorder {
	return m.recorder
}

// GetCar mocks base method.
func (m *MockCarApiService) GetCar(regNum string) (*car.Car, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCar", regNum)
	ret0, _ := ret[0].(*car.Car)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCar indicates an expected call of GetCar.
func (mr *MockCarApiServiceMockRecorder) GetCar(regNum any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCar", reflect.TypeOf((*MockCarApiService)(nil).GetCar), regNum)
}
